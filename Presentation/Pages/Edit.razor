@page "/{NetworkId:guid}/Edit"
@using NetworkEdition.ViewModels
@inject IHttpClientFactory ClientFactory

<TextBox @bind-Value="@Name"/>

@code {

#nullable enable

    private HttpClient _client = new();

    private Network _network = new(Guid.Empty, "Unnamed network");
    private Relay[] _relays = Array.Empty<Relay>();

    [Parameter]
    public Guid NetworkId { get; set; }

    private string Name
    {
        get => _network.Name;
        set
        {
            _client.PutAsJsonAsync($"Networks/{NetworkId}", new NetworkProps(value));
            _network = _network with { Name = value };
        }
    }

    protected override async Task OnInitializedAsync()
    {
        _client = ClientFactory.CreateClient("Backend");

        _network = await _client.GetFromJsonAsync<Network>($"Networks/{NetworkId}")
                   ?? throw new Exception();
        _relays = (await _client.GetFromJsonAsync<IEnumerable<Relay>>($"Networks/{NetworkId}/Relays")
                   ?? throw new Exception()).ToArray();

        await base.OnInitializedAsync();
    }

}