@page "/{NetworkId:guid}/Edit"
@using NetworkEdition.ViewModels
@inject IHttpClientFactory ClientFactory

<TextBox @bind-Value="@Name"/>

<div class="card-columns">
    @foreach (var relay in _network.Relays)
    {
        <div class="card"
             style="position: relative; left: @(relay.X)px; top: @(relay.Y)px; width: 150px; height: 150px;"
             draggable="true">
            <div class="card-header">
                @relay.Name
            </div>
            <div class="card-body">
                Some text here?
            </div>
        </div>
    }
</div>

@code {

#nullable enable

    private Network _network = new(Guid.Empty, "Unnamed network", Array.Empty<Relay>());
    private HttpClient _client = new();

    [Parameter]
    public Guid NetworkId { get; set; }

    private string Name
    {
        get => _network.Name;
    // ReSharper disable once UnusedMember.Local
        set
        {
            _client.PutAsJsonAsync($"Networks/{NetworkId}", new NetworkProps(value));
            _network = _network with { Name = value };
        }
    }

    protected override async Task OnInitializedAsync()
    {
        _client = ClientFactory.CreateClient("Backend");
        _network = await _client.GetFromJsonAsync<Network>($"Networks/{NetworkId}")
                   ?? throw new Exception();

        await base.OnInitializedAsync();
    }

}